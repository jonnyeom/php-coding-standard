diff --git a/src/Unleashed/Helpers/NamespaceHelper.php b/src/Unleashed/Helpers/NamespaceHelper.php
index 0f917e5..26a5513 100644
--- a/src/Unleashed/Helpers/NamespaceHelper.php
+++ b/src/Unleashed/Helpers/NamespaceHelper.php
@@ -13,9 +13,9 @@ use PHP_CodeSniffer\Files\File;
  */
 final class NamespaceHelper
 {
-    public static function getFirstNamespacePointer(File $phpcsFile): int|null
+    public static function getFirstNamespacePointer(File $phpcsFile): ?int
     {
-        $lazyValue = static function () use ($phpcsFile): int|null {
+        $lazyValue = static function () use ($phpcsFile): ?int {
             $token = $phpcsFile->findNext(T_NAMESPACE, 0);
 
             return $token === false ? null : $token;
diff --git a/src/Unleashed/Helpers/SniffLocalCache.php b/src/Unleashed/Helpers/SniffLocalCache.php
index baf8942..a8eaab3 100644
--- a/src/Unleashed/Helpers/SniffLocalCache.php
+++ b/src/Unleashed/Helpers/SniffLocalCache.php
@@ -16,9 +16,12 @@ final class SniffLocalCache
     /** @var array<int, array<string, mixed>> */
     private static array $cache = [];
 
-    public static function getAndSetIfNotCached(File $phpcsFile, string $key, \Closure $lazyValue): mixed
+    /**
+     * @return mixed
+     */
+    public static function getAndSetIfNotCached(File $phpcsFile, string $key, \Closure $lazyValue)
     {
-        $fixerLoops  = $phpcsFile->fixer?->loops ?? 0;
+        $fixerLoops  = $phpcsFile->fixer !== null ? $phpcsFile->fixer->loops : 0;
         $internalKey = \sprintf('%s-%s', $phpcsFile->getFilename(), $key);
 
         self::setIfNotCached($fixerLoops, $internalKey, $lazyValue);
diff --git a/src/Unleashed/Sniffs/DoctrineMigrations/DescriptionRequiredSniff.php b/src/Unleashed/Sniffs/DoctrineMigrations/DescriptionRequiredSniff.php
index 26bc98e..51b5d75 100644
--- a/src/Unleashed/Sniffs/DoctrineMigrations/DescriptionRequiredSniff.php
+++ b/src/Unleashed/Sniffs/DoctrineMigrations/DescriptionRequiredSniff.php
@@ -80,7 +80,7 @@ final class DescriptionRequiredSniff implements Sniff
         );
     }
 
-    private static function findMethodInClass(File $phpcsFile, string $methodName, int $startPtr, int $endPtr): int|null
+    private static function findMethodInClass(File $phpcsFile, string $methodName, int $startPtr, int $endPtr): ?int
     {
         do {
             $nextFunctionPointer = TokenHelper::findNext($phpcsFile, T_FUNCTION, $startPtr + 1);
@@ -110,7 +110,7 @@ final class DescriptionRequiredSniff implements Sniff
         return null;
     }
 
-    private static function findApproximateClassEndPointer(File $phpcsFile, int $ptrWithinClass): int|null
+    private static function findApproximateClassEndPointer(File $phpcsFile, int $ptrWithinClass): ?int
     {
         $classPtrs = \array_keys(ClassHelper::getAllNames($phpcsFile));
 
diff --git a/tests/expected_report.txt b/tests/expected_report.txt
index 5c04c25..8fdd08d 100644
--- a/tests/expected_report.txt
+++ b/tests/expected_report.txt
@@ -10,12 +10,12 @@ tests/input/class-references.php                      10      0
 tests/input/concatenation_spacing.php                 49      0
 tests/input/constants-no-lsb.php                      2       0
 tests/input/constants-var.php                         3       0
-tests/input/ControlStructures.php                     18      2
+tests/input/ControlStructures.php                     17      2
 tests/input/doc-comment-spacing.php                   17      0
 tests/input/doctrine-migration.php                    18      6
 tests/input/duplicate-assignment-variable.php         1       0
-tests/input/EarlyReturn.php                           7       0
-tests/input/example-class.php                         43      0
+tests/input/EarlyReturn.php                           6       0
+tests/input/example-class.php                         41      0
 tests/input/forbidden-comments.php                    14      0
 tests/input/forbidden-functions.php                   13      0
 tests/input/ForbiddenClasses.php                      7       0
@@ -26,15 +26,15 @@ tests/input/inline_type_hint_assertions.php           7       0
 tests/input/LowCaseTypes.php                          3       0
 tests/input/merge-conflict.php                        6       0
 tests/input/namespaces-spacing.php                    12      0
-tests/input/NamingCamelCase.php                       10      0
+tests/input/NamingCamelCase.php                       7       0
 tests/input/negation-operator.php                     2       0
 tests/input/new_with_parentheses.php                  30      0
 tests/input/not_spacing.php                           8       0
 tests/input/null_coalesce_operator.php                3       0
 tests/input/optimized-functions.php                   1       0
-tests/input/PropertyDeclaration.php                   7       0
-tests/input/return_type_on_closures.php               22      0
-tests/input/return_type_on_methods.php                18      0
+tests/input/PropertyDeclaration.php                   6       0
+tests/input/return_type_on_closures.php               17      0
+tests/input/return_type_on_methods.php                13      0
 tests/input/semicolon_spacing.php                     3       0
 tests/input/single-line-array-spacing.php             5       0
 tests/input/spread-operator.php                       10      0
@@ -48,11 +48,11 @@ tests/input/UnusedVariables.php                       2       0
 tests/input/use-function.php                          2       0
 tests/input/use-ordering.php                          9       0
 tests/input/useless-semicolon.php                     2       0
-tests/input/UselessConditions.php                     24      0
+tests/input/UselessConditions.php                     23      0
 ----------------------------------------------------------------------
-A TOTAL OF 458 ERRORS AND 9 WARNINGS WERE FOUND IN 46 FILES
+A TOTAL OF 439 ERRORS AND 9 WARNINGS WERE FOUND IN 46 FILES
 ----------------------------------------------------------------------
-PHPCBF CAN FIX 367 OF THESE SNIFF VIOLATIONS AUTOMATICALLY
+PHPCBF CAN FIX 348 OF THESE SNIFF VIOLATIONS AUTOMATICALLY
 ----------------------------------------------------------------------
 
 
diff --git a/tests/fixed/ControlStructures.php b/tests/fixed/ControlStructures.php
index a1750e6..a2c3be4 100644
--- a/tests/fixed/ControlStructures.php
+++ b/tests/fixed/ControlStructures.php
@@ -108,7 +108,7 @@ class ControlStructures
 
         try {
             echo 4;
-        } catch (Throwable) {
+        } catch (Throwable $throwable) {
         }
 
         echo 5;
diff --git a/tests/fixed/EarlyReturn.php b/tests/fixed/EarlyReturn.php
index 7d5eb01..5a82a93 100644
--- a/tests/fixed/EarlyReturn.php
+++ b/tests/fixed/EarlyReturn.php
@@ -11,7 +11,7 @@ class EarlyReturn
         return $bar === 'bar';
     }
 
-    public function foo(): string|null
+    public function foo(): ?string
     {
         foreach ($itens as $item) {
             if (! $item->isItem()) {
diff --git a/tests/fixed/NamingCamelCase.php b/tests/fixed/NamingCamelCase.php
index 5493471..57d9f2b 100644
--- a/tests/fixed/NamingCamelCase.php
+++ b/tests/fixed/NamingCamelCase.php
@@ -6,11 +6,14 @@ namespace Example;
 
 class NamingCamelCase
 {
-    public mixed $A;
+    /** @var mixed */
+    public $A;
 
-    protected mixed $B;
+    /** @var mixed */
+    protected $B;
 
-    private mixed $C;
+    /** @var mixed */
+    private $C;
 
     public function fcn(string $A): void
     {
diff --git a/tests/fixed/PropertyDeclaration.php b/tests/fixed/PropertyDeclaration.php
index 7f286ad..5c3f27b 100644
--- a/tests/fixed/PropertyDeclaration.php
+++ b/tests/fixed/PropertyDeclaration.php
@@ -9,5 +9,5 @@ final class PropertyDeclaration
     public bool $boolPropertyWithDefaultValue = false;
     public string $stringProperty;
     public int $intProperty;
-    public string|null $nullableString = null;
+    public ?string $nullableString = null;
 }
diff --git a/tests/fixed/UselessConditions.php b/tests/fixed/UselessConditions.php
index fc414de..02f6592 100644
--- a/tests/fixed/UselessConditions.php
+++ b/tests/fixed/UselessConditions.php
@@ -92,7 +92,7 @@ class UselessConditions
         return false;
     }
 
-    public function nullShouldNotBeTreatedAsFalse(): bool|null
+    public function nullShouldNotBeTreatedAsFalse(): ?bool
     {
         if (! $this->isAdmin) {
             return null;
diff --git a/tests/fixed/example-class.php b/tests/fixed/example-class.php
index cc1f058..050d89c 100644
--- a/tests/fixed/example-class.php
+++ b/tests/fixed/example-class.php
@@ -18,16 +18,17 @@ class Example implements \IteratorAggregate
 {
     private const VERSION = \PHP_VERSION - (PHP_MINOR_VERSION * 100) - PHP_PATCH_VERSION;
 
-    private int|null $foo = null;
+    private ?int $foo = null;
 
     /** @var string[] */
     private array $bar;
 
     private bool $baz;
 
-    private ControlStructureSniff|int|string|null $baxBax = null;
+    /** @var ControlStructureSniff|int|string|null */
+    private $baxBax;
 
-    public function __construct(int|null $foo = null, array $bar = [], bool $baz = false, $baxBax = 'unused')
+    public function __construct(?int $foo = null, array $bar = [], bool $baz = false, $baxBax = 'unused')
     {
         $this->foo    = $foo;
         $this->bar    = $bar;
@@ -38,7 +39,7 @@ class Example implements \IteratorAggregate
     /**
      * Description
      */
-    public function getFoo(): int|null
+    public function getFoo(): ?int
     {
         return $this->foo;
     }
diff --git a/tests/fixed/return_type_on_closures.php b/tests/fixed/return_type_on_closures.php
index 80ad413..134bade 100644
--- a/tests/fixed/return_type_on_closures.php
+++ b/tests/fixed/return_type_on_closures.php
@@ -22,7 +22,7 @@ static function (
     int $c,
     int $d,
     int $e,
-    int $b,
+    int $b
 ): void {
 }
 
@@ -31,7 +31,7 @@ static function (
     int $c,
     int $d,
     int $e,
-    int $b,
+    int $b
 ): void {
 }
 
@@ -40,7 +40,7 @@ static function (
     int $c,
     int $d,
     int $e,
-    int $b,
+    int $b
 ): void {
 }
 
@@ -49,7 +49,7 @@ static function (
     int $c,
     int $d,
     int $e,
-    int $b,
+    int $b
 ): void {
 }
 
@@ -58,6 +58,6 @@ static function (
     int $c,
     int $d,
     int $e,
-    int $b,
+    int $b
 ): void {
 }
diff --git a/tests/fixed/return_type_on_methods.php b/tests/fixed/return_type_on_methods.php
index 0c897ae..8e2c6f7 100644
--- a/tests/fixed/return_type_on_methods.php
+++ b/tests/fixed/return_type_on_methods.php
@@ -31,7 +31,7 @@ class Test
         int $c,
         int $d,
         int $e,
-        int $b,
+        int $b
     ): void {
     }
 
@@ -40,7 +40,7 @@ class Test
         int $c,
         int $d,
         int $e,
-        int $b,
+        int $b
     ): void {
     }
 
@@ -49,7 +49,7 @@ class Test
         int $c,
         int $d,
         int $e,
-        int $b,
+        int $b
     ): void {
     }
 
@@ -58,7 +58,7 @@ class Test
         int $c,
         int $d,
         int $e,
-        int $b,
+        int $b
     ): void {
     }
 
@@ -67,7 +67,7 @@ class Test
         int $c,
         int $d,
         int $e,
-        int $b,
+        int $b
     ): void {
     }
 }
